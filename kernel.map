
Allocating common symbols
Common symbol       size              file

gp_curProc          0x4               target/kernel/main.o
kernel_reenter      0x1               target/kernel/main.o
sys_proc_stack      0x400             target/kernel/main.o
g_tss               0x68              target/kernel/main.o
gp_bootParam        0x4               target/kernel/main.o
gp_idt              0x6               target/kernel/main.o
bill_proc           0x4               target/kernel/main.o
g_dispPosition      0x4               target/kernel/main.o
gp_gdt              0x6               target/kernel/main.o
g_kernelMap         0x8               target/kernel/main.o
g_irqHandlers       0x40              target/kernel/main.o
ready_tail          0xc               target/kernel/main.o
g_gdt               0x138             target/kernel/main.o
ready_head          0xc               target/kernel/main.o
p_proc_addr         0x88              target/kernel/main.o
proc_table          0x1ba0            target/kernel/main.o

Discarded input sections

 .note.GNU-stack
                0x00000000        0x0 target/kernel/main.o
 .note.GNU-stack
                0x00000000        0x0 target/kernel/protect.o
 .note.GNU-stack
                0x00000000        0x0 target/kernel/init_c.o
 .note.GNU-stack
                0x00000000        0x0 target/kernel/exception.o
 .note.GNU-stack
                0x00000000        0x0 target/kernel/panic.o
 .note.GNU-stack
                0x00000000        0x0 target/kernel/i8259.o
 .note.GNU-stack
                0x00000000        0x0 target/kernel/clock.o
 .note.GNU-stack
                0x00000000        0x0 target/lib/ansi/memcmp.o
 .note.GNU-stack
                0x00000000        0x0 target/lib/ansi/cstring.o
 .note.GNU-stack
                0x00000000        0x0 target/lib/stdio/printf.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .text set to 0x1000
LOAD target/kernel/kernel.o
LOAD target/kernel/main.o
LOAD target/kernel/kernel_i386lib.o
LOAD target/kernel/protect.o
LOAD target/kernel/init_c.o
LOAD target/kernel/exception.o
LOAD target/kernel/panic.o
LOAD target/kernel/i8259.o
LOAD target/kernel/clock.o
LOAD target/lib/ansi/string.o
LOAD target/lib/ansi/memcmp.o
LOAD target/lib/ansi/cstring.o
LOAD target/lib/stdio/printf.o
                0x08048000                PROVIDE (__executable_start, 0x8048000)
                0x08048094                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x08048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x00000000        0x0 target/kernel/kernel.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 .rel.data      0x00000000        0x0 target/kernel/kernel.o
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)

.rela.dyn
 *(.rela.init)
 *(.rela.text .rela.text.* .rela.gnu.linkonce.t.*)
 *(.rela.fini)
 *(.rela.rodata .rela.rodata.* .rela.gnu.linkonce.r.*)
 *(.rela.data .rela.data.* .rela.gnu.linkonce.d.*)
 *(.rela.tdata .rela.tdata.* .rela.gnu.linkonce.td.*)
 *(.rela.tbss .rela.tbss.* .rela.gnu.linkonce.tb.*)
 *(.rela.ctors)
 *(.rela.dtors)
 *(.rela.got)
 *(.rela.bss .rela.bss.* .rela.gnu.linkonce.b.*)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.init
 *(.init)

.plt
 *(.plt)

.text           0x00001000     0x1673
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00001000       0x3f target/kernel/kernel.o
                0x00001000                _start
 *fill*         0x0000103f        0x1 90909090
 .text          0x00001040      0x309 target/kernel/main.o
                0x000010de                aos_main
                0x0000108f                test_task_b
                0x00001040                test_task_a
 *fill*         0x00001349        0x7 90909090
 .text          0x00001350      0x6bf target/kernel/kernel_i386lib.o
                0x000014eb                cpu_halt
                0x000017c0                hwint08
                0x00001435                invalid_opcode
                0x000013bd                divide_error
                0x0000146c                coop_proc_seg_oob
                0x00001350                phys_copy
                0x000018c0                hwint12
                0x000014ad                general_protection
                0x0000140d                over_flow
                0x00001590                enable_irq
                0x00001520                out_word
                0x00001900                hwint13
                0x00001800                hwint09
                0x00001980                hwint15
                0x000015c0                hwint00
                0x00001680                hwint03
                0x0000148f                segment_not_present
                0x000014cb                math_fault
                0x00001540                interrupt_unlock
                0x00001840                hwint10
                0x000013f9                break_point
                0x00001600                hwint01
                0x00001500                out_byte
                0x000013d1                debug_exception
                0x00001640                hwint02
                0x0000145d                double_fault
                0x00001380                low_print
                0x00001700                hwint05
                0x000013e5                non_maskable_int
                0x00001940                hwint14
                0x000014f0                in_byte
                0x000014bc                page_fault
                0x00001421                out_of_bounds
                0x00001740                hwint06
                0x00001510                in_word
                0x000016c0                hwint04
                0x00001480                invalid_tss
                0x000019e7                restart
                0x00001780                hwint07
                0x0000149e                stack_exception
                0x00001530                interrupt_lock
                0x00001880                hwint11
                0x00001449                dev_not_available
                0x00001550                disable_irq
 *fill*         0x00001a0f        0x1 90909090
 .text          0x00001a10      0x270 target/kernel/protect.o
                0x00001c0d                init_segment_desc
                0x00001a10                init_protect
 .text          0x00001c80       0x39 target/kernel/init_c.o
                0x00001c80                init_c
 *fill*         0x00001cb9        0x3 90909090
 .text          0x00001cbc       0x6e target/kernel/exception.o
                0x00001cbc                exception_handler
 *fill*         0x00001d2a        0x2 90909090
 .text          0x00001d2c       0xbc target/kernel/panic.o
                0x00001d2c                panic
                0x00001dab                bad_compare
                0x00001d6e                bad_assertion
 .text          0x00001de8      0x160 target/kernel/i8259.o
                0x00001f34                softIntTest
                0x00001de8                init_8259A
                0x00001ee5                put_irq_handler
 .text          0x00001f48       0xf7 target/kernel/clock.o
                0x00001f48                clock_task
 *fill*         0x0000203f        0x1 90909090
 .text          0x00002040       0x81 target/lib/ansi/memcmp.o
                0x00002040                memcmp
 *fill*         0x000020c1        0x3 90909090
 .text          0x000020c4      0x12b target/lib/ansi/cstring.o
                0x000020c4                strncmp
                0x0000216a                strcmp
 *fill*         0x000021ef        0x1 90909090
 .text          0x000021f0      0x483 target/lib/stdio/printf.o
                0x000021f0                printf
                0x0000222a                fmt_string
 *(.text.*personality*)
 *(.gnu.warning)

.fini
 *(.fini)
                0x00002673                PROVIDE (__etext, .)
                0x00002673                PROVIDE (_etext, .)
                0x00002673                PROVIDE (etext, .)

.rodata         0x00002674      0x4d4
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00002674       0x2c target/kernel/main.o
 .rodata        0x000026a0       0x35 target/kernel/protect.o
 .rodata        0x000026d5       0x14 target/kernel/init_c.o
 *fill*         0x000026e9        0x3 00
 .rodata        0x000026ec      0x1f8 target/kernel/exception.o
 .rodata        0x000028e4       0xb7 target/kernel/panic.o
 *fill*         0x0000299b        0x1 00
 .rodata        0x0000299c       0x43 target/kernel/i8259.o
 .rodata        0x000029df       0x19 target/kernel/clock.o
 .rodata        0x000029f8      0x150 target/lib/stdio/printf.o

.lib            0x00002b48       0x7e
 .lib           0x00002b48       0x7e target/lib/ansi/string.o
                0x00002b98                strcpy
                0x00002b48                memcpy
                0x00002b74                memset
                0x00002bb0                strlen

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)
                0x00002bc6                . = (ALIGN (0x1000) - ((0x1000 - .) & 0xfff))
                0x00003bc6                . = (0x1000 DATA_SEGMENT_ALIGN 0x1000)

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00003bc6        0x0
                0x00003bc6                PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                0x00003bc6                PROVIDE (__preinit_array_end, .)

.init_array     0x00003bc6        0x0
                0x00003bc6                PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*))
 *(.init_array)
                0x00003bc6                PROVIDE (__init_array_end, .)

.fini_array     0x00003bc6        0x0
                0x00003bc6                PROVIDE (__fini_array_start, .)
 *(.fini_array)
 *(SORT(.fini_array.*))
                0x00003bc6                PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
                0x00003bc6                . = (. DATA_SEGMENT_RELRO_END 0xc)

.got.plt
 *(.got.plt)

.data           0x00003be0      0x266
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00003be0        0x1 target/kernel/kernel.o
 *fill*         0x00003be1       0x1f 00
 .data          0x00003c00       0x30 target/kernel/main.o
                0x00003c00                sys_proc_table
 *fill*         0x00003c30       0x10 00
 .data          0x00003c40      0x18c target/kernel/protect.o
                0x00003c40                s_initGateInfos
 .data          0x00003dcc        0x0 target/kernel/init_c.o
 *fill*         0x00003dcc       0x14 00
 .data          0x00003de0       0x44 target/kernel/exception.o
 .data          0x00003e24        0x0 target/kernel/panic.o
 .data          0x00003e24        0x0 target/kernel/i8259.o
 .data          0x00003e24        0x0 target/kernel/clock.o
 .data          0x00003e24        0x0 target/lib/ansi/memcmp.o
 .data          0x00003e24        0x0 target/lib/ansi/cstring.o
 .data          0x00003e24       0x22 target/lib/stdio/printf.o
 *(.gnu.linkonce.d.*personality*)

.data1
 *(.data1)
                0x00003e46                _edata = .
                0x00003e46                PROVIDE (edata, .)
                0x00003e46                __bss_start = .

.bss            0x00003e60     0x3020
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00003e60      0x800 target/kernel/kernel.o
                0x00004660                STACK_TOP
 .bss           0x00004660        0x0 target/kernel/main.o
 .bss           0x00004660      0x4a8 target/kernel/protect.o
 .bss           0x00004b08        0x0 target/kernel/init_c.o
 .bss           0x00004b08        0x0 target/kernel/exception.o
 .bss           0x00004b08        0x0 target/kernel/panic.o
 .bss           0x00004b08        0x0 target/kernel/i8259.o
 .bss           0x00004b08        0x4 target/kernel/clock.o
 .bss           0x00004b0c        0x0 target/lib/ansi/memcmp.o
 .bss           0x00004b0c        0x0 target/lib/ansi/cstring.o
 *fill*         0x00004b0c       0x14 00
 .bss           0x00004b20       0xa0 target/lib/stdio/printf.o
 *(COMMON)
 COMMON         0x00004bc0     0x22c0 target/kernel/main.o
                0x00004bc0                gp_curProc
                0x00004bc4                kernel_reenter
                0x00004be0                sys_proc_stack
                0x00004fe0                g_tss
                0x00005048                gp_bootParam
                0x0000504c                gp_idt
                0x00005054                bill_proc
                0x00005058                g_dispPosition
                0x0000505c                gp_gdt
                0x00005064                g_kernelMap
                0x00005080                g_irqHandlers
                0x000050c0                ready_tail
                0x000050e0                g_gdt
                0x00005218                ready_head
                0x00005240                p_proc_addr
                0x000052e0                proc_table
                0x00006e80                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00006e80                . = ALIGN (0x4)
                0x00006e80                . = ALIGN (0x4)
                0x00006e80                _end = .
                0x00006e80                PROVIDE (end, .)
                0x00006e80                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000      0x229
 *(.comment)
 .comment       0x00000000       0x1f target/kernel/kernel.o
 .comment       0x0000001f       0x2e target/kernel/main.o
 .comment       0x0000004d       0x1f target/kernel/kernel_i386lib.o
 .comment       0x0000006c       0x2e target/kernel/protect.o
 .comment       0x0000009a       0x2e target/kernel/init_c.o
 .comment       0x000000c8       0x2e target/kernel/exception.o
 .comment       0x000000f6       0x2e target/kernel/panic.o
 .comment       0x00000124       0x2e target/kernel/i8259.o
 .comment       0x00000152       0x2e target/kernel/clock.o
 .comment       0x00000180       0x1f target/lib/ansi/string.o
 .comment       0x0000019f       0x2e target/lib/ansi/memcmp.o
 .comment       0x000001cd       0x2e target/lib/ansi/cstring.o
 .comment       0x000001fb       0x2e target/lib/stdio/printf.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

/DISCARD/
 *(.note.GNU-stack)
OUTPUT(target/kernel/kernel.bin elf32-i386)
